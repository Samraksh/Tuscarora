////////////////////////////////////////////////////////////////////////////////// 
// Tuscarora Software Suite. The Samraksh Company.  All rights reserved. 
// Please see License.txt file in the software root directory for usage rights. 
// Please see developer's manual for implementation notes. 
////////////////////////////////////////////////////////////////////////////////// 

/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.4 at Wed Oct 21 16:23:23 2015. */

#ifndef PB_FILEPROTO_PB_H_INCLUDED
#define PB_FILEPROTO_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _FileInfo {
    uint64_t inode;
    char name[128];
} FileInfo;

typedef struct _ListFilesRequest {
    bool has_path;
    char path[128];
} ListFilesRequest;

typedef struct _ListFilesResponse {
    bool has_path_error;
    bool path_error;
    pb_callback_t file;
} ListFilesResponse;

/* Default values for struct fields */
extern const char ListFilesRequest_path_default[128];
extern const bool ListFilesResponse_path_error_default;

/* Initializer values for message structs */
#define ListFilesRequest_init_default            {false, "/"}
#define FileInfo_init_default                    {0, ""}
#define ListFilesResponse_init_default           {false, false, {{NULL}, NULL}}
#define ListFilesRequest_init_zero               {false, ""}
#define FileInfo_init_zero                       {0, ""}
#define ListFilesResponse_init_zero              {false, 0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define FileInfo_inode_tag                       1
#define FileInfo_name_tag                        2
#define ListFilesRequest_path_tag                1
#define ListFilesResponse_path_error_tag         1
#define ListFilesResponse_file_tag               2

/* Struct field encoding specification for nanopb */
extern const pb_field_t ListFilesRequest_fields[2];
extern const pb_field_t FileInfo_fields[3];
extern const pb_field_t ListFilesResponse_fields[3];

/* Maximum encoded size of messages (where known) */
#define ListFilesRequest_size                    131
#define FileInfo_size                            142

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define FILEPROTO_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
